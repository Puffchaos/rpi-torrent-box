sudo: required
services: docker
before_install:
#    - sudo apt-get update
#    - sudo apt-get -y -o Dpkg::Options::="--force-confnew" install docker-ce
    - docker --version # for verification
    - sudo apt-get install -y make
    - whoami
language: generic
notifications:
  slack:
    secure: Uh77/RFTPOOEbUiW/JbHo5JIrVb6ICdnLiQEHNi+ETXHGUIH93A7l47t7TUquKgrPqDT04ECY2YSxZiFUDhd/zBbqLqyKPMLn59gGe8etk+1/XvqKZg4K6Wkd9j0gSfDW/pSJGA9XsmBx9OlIMY/hJQ0Cv5gn+v8UOLwJejCTp64kKlbzdcgOeB5m7ZimLIpDLJhmxIHRXcuwhJujER0zDVoXGm2Un5cjKHnW4O1eKsaSyCg3boPH8v143gux6VE4Gpqkl2E64klDoCtYK5P5nB4F3kWb6h1+1dZh34/DdzHHXFzLFwEMHpjgobo8G9k9WeWZ0LKKavIPhZC+HdWuQQV+lacbw4oIQwKzy3xjgYvN12tUkx1vgHfejprJrbxnLIboamPpseC/SdFMQdr8lP7Q5l0ZCAfXN/GmZkzpDM8JYhxpFqek7HS1wRsabdFhKLGTeStiX4ueRLJUdizc2QnWw4dubODlDk1xdjEbiXbGrgVEL3dwguG3cKUgss+vYVQrEbqRAfePycJCBhHnjdnKFq0O01DUwbmG82WnNsno/OqPlK2BGdCYpoAQwMDXVVZmiVI/zPBYrSO7Ues9C5YUu34SARtf7gDOvPsxRzIZ6hekpTpsXdqfxHFeHviTgcUxkzs1HoAl9VQfhYIFrw/bkz9Ey65LwPnBdbP+V4=
    on_success: always
    on_failure: always
jobs:
  include:
  - stage: compile arm parts
    env:
    - TAG=$(grep "ENV VER_BOX" Dockerfile.pack | awk 'NF>1{print $NF}')
    - PACK_IMAGENAME=sdelrio/rpi-torrent-box
    - BUILDER_BASE=resin/rpi-raspbian:jessie
    - GCCBUILDER_IMAGENAME=sdelrio/rpi-gccbuilder
    script:
    - echo VERSION TAG $TAG
    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
    - make init
    - |
      if [ "$TRAVIS_PULL_REQUEST" == "true" ]; then
        echo "ARM build disabled on pull request"
      else
        ./arm_curl.sh fi
      fi
  - env:
    - TAG=$(grep "ENV VER_BOX" Dockerfile.pack | awk 'NF>1{print $NF}')
    - PACK_IMAGENAME=sdelrio/rpi-torrent-box
    - BUILDER_BASE=resin/rpi-raspbian:jessie
    - GCCBUILDER_IMAGENAME=sdelrio/rpi-gccbuilder
    script:
    - echo VERSION TAG $TAG
    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
    - make init
    - |
      if [ "$TRAVIS_PULL_REQUEST" == "true" ]; then
        echo "ARM build disabled on pull request"
      else
        ./arm_xmlrpc.sh
      fi
  - env:
    - TAG=$(grep "ENV VER_BOX" Dockerfile.pack | awk 'NF>1{print $NF}')
    - VER_LIBTORRENT=$(grep "ENV VER_LIBTORRENT" Dockerfile.pack | awk 'NF>1{print $NF}')
    - PACK_IMAGENAME=sdelrio/rpi-torrent-box
    - BUILDER_BASE=resin/rpi-raspbian:jessie
    - GCCBUILDER_IMAGENAME=sdelrio/rpi-gccbuilder
    script:
    - echo VERSION TAG $TAG
    - echo VER_LIBTORRENT $VER_LIBTORRENT
    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
    - make init
    - |
      if [ "$TRAVIS_PULL_REQUEST" == "true" ]; then
        echo "ARM build disabled on pull request"
      else
        ./arm_libtorrent.sh
      fi
  - env:
    - TAG=$(grep "ENV VER_BOX" Dockerfile.pack | awk 'NF>1{print $NF}')
    - VER_RTORRENT=$(grep "ENV VER_RTORRENT" Dockerfile.pack | awk 'NF>1{print $NF}')
    - PACK_IMAGENAME=sdelrio/rpi-torrent-box
    - BUILDER_BASE=resin/rpi-raspbian:jessie
    - GCCBUILDER_IMAGENAME=sdelrio/rpi-gccbuilder
    script:
    - echo VERSION TAG $TAG
    - echo VER_RTORRENT $VER_RTORRENT
    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - docker pull sdelrio/arm-curl-copy | cat
    - docker pull sdelrio/arm-xmlrpc-copy | cat
    - docker pull sdelrio/arm-libtorrent-copy | cat
    - make init && mkdir build/curl-7.39.0 && mkdir build/xmlrpc-c && mkdir build/libtorrent-0.13.7
    - docker run --rm -v $(pwd)/build/curl-7.39.0:/dest sdelrio/arm-curl-copy cp -a /copy/ /dest
    - docker run --rm -v $(pwd)/build/xmlrpc-c:/dest sdelrio/arm-xmlrpc-copy cp -a /copy/ /dest
    - docker run --rm -v $(pwd)/build/libtorrent-0.13.7:/dest sdelrio/arm-libtorrent-copy/  cp -a /copy /dest
    - ls $(pwd)/build
    - docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
    - |
      if [ "$TRAVIS_PULL_REQUEST" == "true" ]; then
        echo "ARM build disabled on pull request"
      else
        ./arm_rtorrent.sh
      fi
  - stage: build arm docker image
    env:
    - TAG=$(grep "ENV VER_BOX" Dockerfile.pack | awk 'NF>1{print $NF}')
    - PACK_IMAGENAME=sdelrio/rpi-torrent-box
    - BUILDER_BASE=resin/rpi-raspbian:jessie
    - GCCBUILDER_IMAGENAME=sdelrio/rpi-gccbuilder
    script:
    - echo VERSION TAG $TAG
    - docker run --rm --privileged multiarch/qemu-user-static:register --reset
    - docker pull sdelrio/arm-curl-copy | cat
    - docker pull sdelrio/arm-xmlrpc-copy | cat
    - docker pull sdelrio/arm-libtorrent-copy | cat
    - docker pull sdelrio/arm-rtorrent-copy | cat
    - make init && mkdir build/curl-7.39.0 && mkdir build/xmlrpc-c && mkdir build/libtorrent-0.13.7 && mkdir build/rtorrent-0.9.7
    - docker run --rm -v $(pwd)/build/curl-7.39.0:/dest sdelrio/arm-curl-copy cp -a /copy/ /dest
    - docker run --rm -v $(pwd)/build/xmlrpc-c:/dest sdelrio/arm-xmlrpc-copy cp -a /copy/ /dest
    - docker run --rm -v $(pwd)/build/libtorrent-0.13.7:/dest sdelrio/arm-libtorrent-copy  cp -a /copy/ /dest
    - docker run --rm -v $(pwd)/build/rtorrent-0.9.:/dest sdelrio/arm-rtorrent-copy  cp -a /copy/ /dest
    - docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
    - |
      if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
        if [ "$TAG" == "master" ]; then
          echo docker tag $PACK_IMAGENAME:latest $PACK_IMAGENAME:$TAG
          echo docker push $PACK_IMAGENAME:$TAG
        else
          echo docker push $PACK_IMAGENAME:v$TAG
          echo docker push $PACK_IMAGENAME:latest
        fi
      fi
  - stage: build x86_64 docker image
    env:
    - TAG=$(grep "ENV VER_BOX" Dockerfile.pack | awk 'NF>1{print $NF}')
    - PACK_IMAGENAME=sdelrio/rtorrent-box
    script:
    - echo VERSION TAG $TAG
    - make init curl xmlrpc libtorrent rtorrent pack
    - |
      if [ "$TRAVIS_BRANCH" == "master" ] && [ "$TRAVIS_PULL_REQUEST" == "false" ]; then
        docker login -u="$DOCKER_USER" -p="$DOCKER_PASS"
        if [ "$TAG" == "master" ]; then
          docker tag $PACK_IMAGENAME:latest $PACK_IMAGENAME:$TAG
          docker push $PACK_IMAGENAME:$TAG
        else
          docker push $PACK_IMAGENAME:v$TAG
          docker push $PACK_IMAGENAME:latest
        fi
      fi

